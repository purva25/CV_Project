# -*- coding: utf-8 -*-
"""CV_Assignment_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17kkdK3YCc5UeYFXfpfacQjbkqz_0U4NZ

**Importing Required Libraries**

Name: Purva Sunil Potdukhe<br>
Roll no: 38
"""

import cv2
from google.colab.patches import cv2_imshow
import numpy as np
from skimage.util import random_noise
from skimage import util
import matplotlib.pyplot as plt
from PIL import Image

"""**Importing the image**"""

from google.colab import files
uploaded = files.upload()

img1 = cv2.imread("python.JPG", cv2.IMREAD_GRAYSCALE)
#img1 = cv2.imread("python.jpg", cv2.IMREAD_GRAYSCALE)

"""**Original Image**"""

cv2_imshow(img1)

"""**Adding Salt and Pepper Noise using random_noise function**"""

img = np.array(img1)
noisy1 = util.random_noise(img, mode='s&p', amount=0.05)
noisy2 = util.random_noise(img, mode='s&p', amount=0.1)
noisy3 = util.random_noise(img, mode='s&p', amount=0.2)
plt.subplot(221)
plt.title('original')
plt.xticks([]) # remove ticks
plt.yticks([])
plt.imshow(img1)
plt.subplot(222)
plt.title('amount=0.05')
plt.xticks([]) # remove ticks
plt.yticks([])
plt.imshow(noisy1)
plt.subplot(223)
plt.title('amount=0.1')
plt.xticks([]) # remove ticks
plt.yticks([])
plt.imshow(noisy2)
plt.subplot(224)
plt.title('amount=0.2')
plt.xticks([]) # remove ticks
plt.yticks([])
plt.imshow(noisy3)
plt.show()

noise = np.array(255*noisy3, dtype = 'uint8')

"""**Removing noise using Median Filter with Kernel size 3**"""

# Apply median filter
median = cv2.medianBlur(noise,3)
 
# Display the image
cv2_imshow(noise)
cv2_imshow(median)
cv2.waitKey(0)
cv2.destroyAllWindows()

"""**Removing noise using Median Filter with Kernel size 5**"""

# Apply median filter
median1 = cv2.medianBlur(noise,5)
 
# Display the image
cv2_imshow(noise)
cv2_imshow(median1)
cv2.waitKey(0)
cv2.destroyAllWindows()

"""**Removing noise using Median Filter with Kernel size 7**"""

# Apply median filter
median2 = cv2.medianBlur(noise,7)
 
# Display the image
cv2_imshow(noise)
cv2_imshow(median2)
cv2.waitKey(0)
cv2.destroyAllWindows()

"""**Applying Gaussian Filter with Kernel size 3**"""

gausBlur = cv2.GaussianBlur(noise, (3,3),0) 
cv2_imshow(noise)
cv2_imshow(gausBlur)

"""**Applying Gaussian Filter with Kernel size 5**"""

gausBlur1 = cv2.GaussianBlur(noise, (5,5),0) 
cv2_imshow(noise)
cv2_imshow(gausBlur)

"""**Applying Gaussian Filter with Kernel size 3**"""

gausBlur2 = cv2.GaussianBlur(noise, (7,7),0) 
cv2_imshow(noise)
cv2_imshow(gausBlur2)